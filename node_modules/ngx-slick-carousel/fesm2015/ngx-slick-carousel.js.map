{"version":3,"file":"ngx-slick-carousel.js.map","sources":["ng://ngx-slick-carousel/slick.component.ts","ng://ngx-slick-carousel/index.ts"],"sourcesContent":["import {isPlatformBrowser} from '@angular/common';\nimport {\n    AfterViewChecked,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Host,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n    selector: 'ngx-slick-carousel',\n    exportAs: 'slick-carousel',\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SlickCarouselComponent),\n        multi: true\n    }],\n    template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, AfterViewChecked {\n\n    @Input() config: any;\n    @Output() afterChange: EventEmitter<any> = new EventEmitter();\n    @Output() beforeChange: EventEmitter<any> = new EventEmitter();\n    @Output() breakpoint: EventEmitter<any> = new EventEmitter();\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n    @Output() init: EventEmitter<any> = new EventEmitter();\n\n\n    public slides: any[] = [];\n    private _removedSlides: SlickItemDirective[] = [];\n    private _addedSlides: SlickItemDirective[] = [];\n    public $instance: any;\n    public currentIndex: number;\n    private initialized: Boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(private el: ElementRef,\n                private zone: NgZone) {\n\n    }\n\n    /**\n     * On component destroy\n     */\n    ngOnDestroy() {\n        this.unslick();\n    }\n\n    /**\n     * On component view checked\n     */\n    ngAfterViewChecked() {\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            } else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            } else {\n                this._addedSlides.forEach(slickItem => {\n                    this.slides.push(slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    });\n                });\n                this._addedSlides = [];\n\n                this._removedSlides.forEach(slickItem => {\n                    const idx = this.slides.indexOf(slickItem);\n                    this.slides = this.slides.filter(s => s !== slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickRemove', idx);\n                    });\n                });\n                this._removedSlides = [];\n            }\n        }\n    }\n\n    /**\n     * init slick\n     */\n    initSlick() {\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular(() => {\n            this.$instance = jQuery(this.el.nativeElement);\n\n            this.$instance.on('init', (event, slick) => {\n                this.zone.run(() => {\n                    this.init.emit({event, slick});\n                });\n            });\n\n            this.$instance.slick(this.config);\n\n            this.zone.run(() => {\n                this.initialized = true;\n\n                this.currentIndex = (this.config && this.config.initialSlide) ? this.config.initialSlide : 0;\n            });\n\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({event, slick, currentSlide});\n                    this.currentIndex = currentSlide;\n                });\n            });\n\n            this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n                this.zone.run(() => {\n                    this.beforeChange.emit({event, slick, currentSlide, nextSlide});\n                });\n            });\n\n            this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n                this.zone.run(() => {\n                    this.breakpoint.emit({event, slick, breakpoint});\n                });\n            });\n\n            this.$instance.on('destroy', (event, slick) => {\n                this.zone.run(() => {\n                    this.destroy.emit({event, slick});\n                });\n            });\n        });\n    }\n\n    addSlide(slickItem: SlickItemDirective) {\n        this._addedSlides.push(slickItem);\n    }\n\n    removeSlide(slickItem: SlickItemDirective) {\n        this._removedSlides.push(slickItem);\n    }\n\n    /**\n     * Slick Method\n     */\n    public slickGoTo(index: number) {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickGoTo', index);\n        });\n    }\n\n    public slickNext() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickNext');\n        });\n    }\n\n    public slickPrev() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPrev');\n        });\n    }\n\n    public slickPause() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPause');\n        });\n    }\n\n    public slickPlay() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPlay');\n        });\n    }\n\n    public unslick() {\n        if (this.$instance) {\n            this.zone.runOutsideAngular(() => {\n                this.$instance.slick('unslick');\n            });\n        }\n        this.initialized = false;\n        this.slides = [];\n        this._addedSlides = [];\n        this._removedSlides = [];\n    }\n}\n\n@Directive({\n    selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n    constructor(public el: ElementRef,\n                @Inject(PLATFORM_ID) private platformId: string,\n                @Host() private carousel: SlickCarouselComponent) {\n    }\n\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.addSlide(this);\n        }\n    }\n\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.removeSlide(this);\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n"],"names":[],"mappings":"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"}
